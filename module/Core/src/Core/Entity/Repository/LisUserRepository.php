<?php

/**
 * LIS development
 * 
 * @link      https://github.com/parnustk/lisbackend
 * @copyright Copyright (c) 2016 Lis Team
 * @license   http://creativecommons.org/licenses/by-nc/4.0/legalcode Attribution-NonCommercial 4.0 International
 */

namespace Core\Entity\Repository;

use Core\Entity\LisUser;
use Doctrine\ORM\EntityRepository;
use DoctrineORMModule\Paginator\Adapter\DoctrinePaginator;
use Doctrine\ORM\Tools\Pagination\Paginator as ORMPaginator;
use Zend\Paginator\Paginator;
use Exception;
use Zend\Json\Json;
use Doctrine\ORM\Query;

/**
 * LisUserRepository
 *
 * This class was generated by the Doctrine ORM. Add your own custom
 * repository methods below.
 */
class LisUserRepository extends EntityRepository implements CRUD
{

    public function Create($data, $returnPartial = false, $extra = null)
    {
        $entity = new LisUser($this->getEntityManager());
        $entity->hydrate($data);

        if (!$entity->validate()) {
            throw new Exception(Json::encode($entity->getMessages(), true));
        }

        $this->getEntityManager()->persist($entity);
        $this->getEntityManager()->flush($entity);

        if ($returnPartial) {

            $dql = "SELECT 
                        partial lisuser.{
                            id,
                            email,
                            password
                        }
                    FROM Core\Entity\LisUser lisuser
                    WHERE lisuser.id = " . $entity->getId();

            $q = $this->getEntityManager()->createQuery($dql); //print_r($q->getSQL());
            $r = $q->getSingleResult(Query::HYDRATE_ARRAY);
            return $r;
        }

        return $entity;
    }

    public function Delete($id, $extra = null)
    {
        
    }

    public function Get($id, $returnPartial = false, $extra = null)
    {
        
    }

    public function GetList($params = null, $extra = null)
    {
        
    }

    public function Update($id, $data, $returnPartial = false, $extra = null)
    {
        
    }

}
